<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 其他 | Dynamic Static]]></title>
  <link href="http://jarontai.github.io/blog/categories/qi-ta/atom.xml" rel="self"/>
  <link href="http://jarontai.github.io/"/>
  <updated>2015-09-08T20:08:11+08:00</updated>
  <id>http://jarontai.github.io/</id>
  <author>
    <name><![CDATA[戴虬]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dartlang背后的那些大牛们]]></title>
    <link href="http://jarontai.github.io/blog/2015/05/12/people-behind-dart/"/>
    <updated>2015-05-12T11:23:39+08:00</updated>
    <id>http://jarontai.github.io/blog/2015/05/12/people-behind-dart</id>
    <content type="html"><![CDATA[<p>最开始接触Dart，是想尝试一下除JavaScript外的浏览器编程语言（确切的说是以JavaScript为编译目标的语言，除Dart外，还有CoffeScript、TypeScript等）。在学习一段时间后，发现dart确实有很多优秀的语言特性，对它也越发喜欢了。最近，在好奇心驱使下，我开始搜索Dart项目组成员的相关资料。不查不知道，一查吓一跳，Dart项目组真算的上是藏龙卧虎。下面，我们就来介绍几位Dart项目组的主要成员：</p>

<p>你可能需要注意（也算是比较有趣）的一点：以下多位成员都有Java/JVM研发背景。</p>

<h3>Gilad Bracha</h3>

<p><img src="/images/custom/dart/people/Gilad.jpg" /><br/>
Gilad Bracha是一位经验丰富，专注于面向对象语言研究的专家。他曾经就职于<a href="http://zh.wikipedia.org/wiki/%E6%98%87%E9%99%BD%E9%9B%BB%E8%85%A6">Sun</a>，专门从事Java/JVM规范的定制与实现工作。他不仅是Java语言规范第二、三版的合著者（co-author），也是JVM规范第二版的主要贡献者。在进入Google后，他加入了Dart项目组，他的主要工作就是Dart语言规范的编写。目前，Gilad正在编写一本全面介绍dart的书 - <a href="http://www.amazon.com/Dart-Programming-Language-Gilad-Bracha/dp/0321927702">The Dart Programming Language</a>。</p>

<!-- more -->


<h3>Lars Bak</h3>

<p><img src="/images/custom/dart/people/Lars.jpg" /><br/>
Lars Bak是Dart的联合创始人之一，他是一个来自丹麦的计算机天才，是一个虚拟机专家。他在近年主导开发的一个项目对互联网产生了深远影响，这就是Chrome的JavaScript虚拟机 - V8。而在更早以前，他从事Smalltalk与Java的虚拟机开发，他曾在<a href="http://zh.wikipedia.org/wiki/%E6%98%87%E9%99%BD%E9%9B%BB%E8%85%A6">Sun</a>的HotSpot项目担任工程与技术主管，专职开发高性能的Java虚拟机。Lars Bak在虚拟机开发领域获得过惊人的成就，现在，他不仅要主导开发一个新的虚拟机，而且还有一门新的编程语言 - Dart。</p>

<h3>Kasper Lund</h3>

<p><img src="/images/custom/dart/people/Kasper.jpg" /><br/>
Kasper Lund也是Dart的联合创始人之一，他也来自丹麦。他早年跟Lars Bak都就职于Sun，一起从事JVM的开发。后来他跟Lars Bak一起加入Google，从事V8引擎开发。他主导开发V8引擎的Crankshaft项目，极大的提升了Chrome的JavaScript运行效率。最近，Kasper Lund开始主导开发<a href="https://github.com/dart-lang/fletch">Fletch</a>，该项目可能是Dart在移动端发展的重要基础项目。</p>

<h3>Peter von der Ahé</h3>

<p><img src="/images/custom/dart/people/Peter.jpg" /><br/>
Peter是一个编译器专家，跟Lars Bak、Kasper Lund一样，早年也就职于Sun，他担任的职位是javac（Java的编译器）的技术主管。现在，他正专注于Dart增量编译的研发工作，同时他也在从事<a href="https://github.com/dart-lang/fletch">Fletch</a>的开发。</p>

<h3>Kathy Walrath</h3>

<p><img src="/images/custom/dart/people/Kathy.jpg" /><br/>
Kathy Walrath是一位阅历丰富的技术写手，她曾就职于Sun、NeXT、HP等公司，她专注于Java文档编写长达11年。在加入Google后，她开始从事Chrome相关技术文档的编写。在web刚刚起步的那些年，她编写过Java applets的开发文档，而且她还是<a href="https://docs.oracle.com/javase/tutorial/">The Java Tutorial</a>的合著者，并对其进行了多年的维护。如今，Kathy在Dart项目组从事各种技术文档的编写工作，她还和Seth Ladd合著了一本书：<a href="https://www.dartlang.org/docs/dart-up-and-running/">Dart: Up and Running</a>。</p>

<h3>Bob Nystrom</h3>

<p><img src="/images/custom/dart/people/Bob.jpg" /><br/>
Bob曾是EA（艺电）公司的一名游戏开发工程师，而且写过一本关于游戏编程模式的畅销书 <a href="http://gameprogrammingpatterns.com/">Game Programming Patterns</a>。在加入Dart项目组后，他主导开发了Dart的包管理器 <a href="https://pub.dartlang.org/">pub</a>，而且也写了很多关于Dart的文章，其中包括深受开发者欢迎的<a href="https://www.dartlang.org/articles/style-guide/">Dart编程风格指南</a>。而在最近，Bob开始帮助Dart建立DEP项目 - <a href="https://github.com/dart-lang/dart_enhancement_proposals">Dart Enhancement Proposals</a>（Dart增强建议书），这将使Dart项目组能更好的接收、吸纳来自社区与开发者的建议。</p>

<p>*Dart项目组还有很多优秀的工程师，希望后面可以再补充。<br>
**以上信息大都收集整理自互联网，准确性有待商榷，如有错误之处，欢迎指正。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[近半年工作小结]]></title>
    <link href="http://jarontai.github.io/blog/2014/10/02/half-year-job-review/"/>
    <updated>2014-10-02T21:58:36+08:00</updated>
    <id>http://jarontai.github.io/blog/2014/10/02/half-year-job-review</id>
    <content type="html"><![CDATA[<p>进入新公司有近半年时间了，期间作为开发主力参与了几个项目，真的学到不少东西，现在做个小小回顾。</p>

<hr />

<p><br/></p>

<h3>Linux/Mac OS</h3>

<p>时间回退到三四年前，我可以说是一个Windows的忠实使用者与拥护者。但随着逐步接触Web开发及各类开源软件，特别是看到近两年前端工具、JavaScript框架的发展壮大以及Nodejs的流行，我越来越觉得基于linux/unix的开发机才是最适合我的。我的理由：1.各种开源软件首选开发平台大都是linux；2.各种新兴前端工具如bower, grunt等都是基于Nodejs的，而Nodejs在linux下开发相对更方便（注：Nodejs早期其实也只有linux版本）。</p>

<!-- more -->


<p>而进入新公司后，IT部门统一标配Mac mini，在经过一到两周的实际使用后，坚定了我告别Windows的决心，毫不犹豫的入手MacBookAir作为个人开发机。在基于unix的Mac上，从后端开发到前端，从数据库到各式开发语言，我都能够很容易的进行安装，开发及调试。特别是使用终端（Terminal/Shell），再配合<a href="http://brew.sh/">homebrew</a>，<a href="http://iterm2.com/">iTerm</a>，<a href="http://git-scm.com">Git</a>等，彻底颠覆了我以前在windows上那种开发体验。当然，在经过一段时间的使用后，我也认识到我对linux的使用还是比较基础的，后面应该花时间系统学习下它。</p>

<hr />

<p><br/></p>

<h3>Magento</h3>

<p><a href="http://magento.com/products/overview">Magento</a>是一个功能强大的，在国外非常流行，且已被ebay收购的电子商务系统。我在上一家公司开始接触它，开始只是做前端样式与布局修改，然后慢慢尝试修改简单的模板代码，到今年初进入新公司后，才有机会做后台模块（module）的开发。算下来，使用Magento的时间也不算少，但是我真的不敢说对它很熟悉，也没有办法喜欢上它。因为在我眼里，对比大部分的PHP框架，基于ZendFramework的Magento实在是个异类，它的开发工作异常繁琐，应该是我用过的最难开发的一个系统。</p>

<p>经常在网上看到同道人抱怨Magento，配置多并且都是xml，文件多嵌套深，文档不齐全，服务器要求高等等，我表示不能赞同更多。我自己在开发的时候也经常被它搞得头疼，甚至郁闷到不想工作；但是后面又想到，如果magento不复杂，那它就不能拥有异常强大且全面的功能了。在可以预见的一到两年内，我都将继续使用它，所以我暂且只能把它理解为一个“甜蜜的负担”，我虽然不喜欢它但我会尽力掌握好它，不让它阻扰我的工作。</p>

<hr />

<p><br/></p>

<h3>Laravel</h3>

<p>应该是在一年多前就听说过<a href="http://laravel.com/">Laravel</a>的大名，但是直到最近才真正使用它。它非常全面，跟有名的RoR（<a href="http://rubyonrails.org/">RubyOnRails</a>）非常相似（Laravel的推出比Rails晚很多年，它应该借鉴了很多后者的设计），从MVC到ORM，从前端模板到数据库migration，开发的方方面面它都为你考虑到。而它的官方文档也比较详细，所以我上手也算比较快，用起来也觉得非常舒服，我打算以后将它作为我PHP开发的主力框架。</p>

<p>此外，通过学习Laravel，也让我接触到了Composer，Namespace等PHP语言的新标准跟新特性，也让我认识到，对比其他语言（如Java，Nodejs），PHP可能有比较多的缺点，但不可否认，近两年它也在慢慢变好，Laravel就是其有力的支持者之一。真心希望有越来越多的人去认识使用Laravel，进而更好的推动PHP发展。</p>

<hr />

<p><br/></p>

<h3>Commentics</h3>

<p>在接到改造<a href="http://www.commentics.org/">Commentics</a>的任务时，心里有些没有底。因为commentics是一个在国内、国外都不太流行的，比较传（lao）统（tu）的留言系统。它没有用Composer，没有MVC，没有ORM，只是PHP加HTML，想要把它改造成一个异步刷新的现代型的留言系统恐怕有些难度。</p>

<p>但是，在折腾它一番后，发现它的后台还是做得比较完善的，前台的功能界面也都是可配置的，除了不现代（ajax）之外，确实算得是一个比较好的留言系统。了解清楚commentics的优缺点，改造的工作思路就清晰了。我们将它后端简化整理成API，重做了前端HTML与样式使之兼容移动端，前端逻辑也使用jQuery重写，比较顺利的将commentics改造成一个功能外观类似于“<a href="http://duoshuo.com/">多说</a>”的、“现代化”的留言系统。同时，通过改造Commentics，我真正认识了什么叫“传统型”的PHP应用，以后再碰到类似的老旧系统时，应该会比较得心应手了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://jarontai.github.io/blog/2014/05/05/hello-world/"/>
    <updated>2014-05-05T14:47:04+08:00</updated>
    <id>http://jarontai.github.io/blog/2014/05/05/hello-world</id>
    <content type="html"><![CDATA[<p>这是我博客（基于github与octopress）的第一篇文章。</p>

<p>摘抄部分Octopress指令：</p>

<!-- more -->


<p>Octopress 常用指令：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_post<span class="o">[</span><span class="p">&amp;</span>ldquo<span class="p">;</span>title<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">]</span>  <span class="c"># Generate a new post&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rake generate   <span class="c"># Generates posts and pages into the public directory&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rake watch      <span class="c"># Watches source/ and sass/ for changes and regenerates&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rake preview    <span class="c"># Watches, and mounts a webserver at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rake deploy     <span class="c"># Deploy to github&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;git add .  <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span>   git commit -m <span class="p">&amp;</span>lsquo<span class="p">;</span>your message<span class="p">&amp;</span>rsquo<span class="p">;</span>  <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span>  git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
