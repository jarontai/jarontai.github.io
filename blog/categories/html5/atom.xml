<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Html5 | Dynamic Static]]></title>
  <link href="http://jarontai.github.io/blog/categories/html5/atom.xml" rel="self"/>
  <link href="http://jarontai.github.io/"/>
  <updated>2016-08-13T08:12:10+08:00</updated>
  <id>http://jarontai.github.io/</id>
  <author>
    <name><![CDATA[JaronTai]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用iFrame Resizer解决iframe高度自适应问题]]></title>
    <link href="http://jarontai.github.io/blog/2014/07/25/use-iframe-resizer/"/>
    <updated>2014-07-25T20:45:39+08:00</updated>
    <id>http://jarontai.github.io/blog/2014/07/25/use-iframe-resizer</id>
    <content type="html"><![CDATA[<p>  最近工作中需要对一个旧项目进行改造，不得已使用了让人头疼的iframe，碰到的最大问题是没有好的方法使其高度自适应。Google一番之后，发现<a href="http://davidjbradshaw.github.io/iframe-resizer/">iframe-resizer</a>能够比较好的解决这个问题，而且还支持跨域访问（使用<a href="https://developer.mozilla.org/en-US/docs/Web/API/window.postMessage">postMessage</a>）。</p>

<p>  在使用它之前，必须明确iframe resizer要求IE8+（firefox，chrome等自然没有问题），如果你需要支持旧版本IE，请关掉本页然后再去google。其次，iframe resizer提供了原生JS与jQuery插件两种调用方式，<!-- more -->而原生方式需要<a href="http://davidjbradshaw.github.io/iframe-resizer/#browser-compatibility">额外的配置</a>，所以我推荐选择jQuery插件方式（毕竟jQuery几乎是标配了）。</p>

<hr />

<p>  OK，下载iframe resizer。</p>

<p>  在iframe resizer压缩包的js文件夹中，有两个文件：
  第一个js是：iframeResizer.min.js。这个js是要放在需要嵌入iframe的页面（parent）中，其调用方式如下（一般情况下你不需要传递任何参数即可实现高度自适应，详细参数请参考<a href="http://davidjbradshaw.github.io/iframe-resizer/#options">官网</a>）：</p>

<p>{% codeblock lang:js %}
$(&lsquo;iframe&rsquo;).iFrameResize([{log: true}]);
{% endcodeblock %}</p>

<p>  第二个js是：iframeResizer.contentWindow.min.js，它需要放到你的iframe页面(child)中去，注意只要引人，不需要代码配置。</p>

<hr />

<p>  接下来是设置iframe，需要注意的是width必须是百分比，scrolling设置为no（为了兼容性）。</p>

<p>{% codeblock lang:html %}</p>

<iframe src="http://yourserver.com/index.html" width="100%" scrolling="no"></iframe>


<p>{% endcodeblock %}</p>

<p>  当然，你也可以使用document.createElement来动态创建它。
{% codeblock lang:js %}
var iframe = document.createElement(&lsquo;iframe&rsquo;);
iframe.setAttribute(&lsquo;src&rsquo;, &lsquo;<a href="http://yourserver.com/index.html">http://yourserver.com/index.html</a>&rsquo;);
iframe.setAttribute(&lsquo;width&rsquo;, &lsquo;100%&rsquo;);
iframe.setAttribute(&lsquo;scrolling&rsquo;, &lsquo;no&rsquo;);
document.body.appendChild(iframe);
{% endcodeblock %}</p>

<hr />

<p>  按照以上步骤设置，基本上就能够解决iframe自适应问题，且iframe内容可跨域。</p>
]]></content>
  </entry>
  
</feed>
